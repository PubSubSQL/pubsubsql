/* Copyright (C) 2013 CompleteDB LLC.
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as
 * published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with PubSubSQL.  If not, see <http://www.gnu.org/licenses/>.
 */

package pubsubsql

type Client interface {

	// Connect establishes connection to pubsubsql server.
	// Address format ipaddress:port
	Connect(address string) bool

	// Disconnect closes connection to pubsubsql server.
	Disconnect() 
	
	// Execute executes sql command.
	// Returns true on success.
	Execute(command string) bool
	
	// Returns last raw response message in JSON format.
	JSONResponse() string
	
	// Ok determines if last operation succeeded. 
	Ok() bool

	// Failed determines if last operation failed.
	Failed() bool

	// ErrorString returns error string when last operation failed.
	ErrorString() string

	// Id returns id of a database table record.
	// Id is automatically generated by pubsubsql server
	// when a record is inserted into a table.
	// Valid for actions: insert, select (when id is in selected columns),
	// pubsub insert, pubsub add, pubsub delete, pubsub update.
	Id() string

	// PubSubId returns pubsubid  
	// Valid for actions: subscribe, pubsub insert, pubsub add, pubsub delete, pubsub update.
	// PubSubId is generated by pubsubsql server when client subscribes to a table and
	// used to uniqely identify particual subscription.
	PubSubId() string	

	// Action returns action of last operation.
	Action() string				

	// RecordCount returns number of rows returned in last result set batch.
	RecordCount() int

	// Next move cusrsor to the next data row in returned result set batch.    
	// Returns false when all records are read.
	// Must be called initially to move to the first record. 
	Next() bool

	// JSONRecord returns current row in JSON format.
	JSONRecord() string
	
	// Value returns column value by column name.
	// If column does not exist returns empty string.	
	Value(column string) string

	// ValueByOrdinal returns column value by column ordinal.
	// If column ordinal does not exist returns empty string.	
	ValueByColumnOrdinal(ordinal int) string

	// Columns returns array of valid column names returned by last operation. 		
	Columns() []string

	// ColumnCount returns number of valid columns
	ColumnCount() int
		

	ContainsId() bool		
	ContainsPubSubId() bool
	ContainsAction() bool
	ContainsRows() bool
	ContainsColumn(column string) bool
	ContainsColumnOrdinal(ordinal int) bool
	ContainsRecord() bool
		
			
}
